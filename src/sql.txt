

CREATE TABLE `USER` (
                          `user_id` BIGINT NOT NULL AUTO_INCREMENT,
                          `id` VARCHAR(50) NOT NULL,
                          `password` VARCHAR(100) NOT NULL,
                          `email` VARCHAR(100) NOT NULL,
                          `nickname` VARCHAR(50) NOT NULL,
                          `cre_date` TIMESTAMP NOT NULL,
                          `del_date` TIMESTAMP NULL,
                          `state` VARCHAR(1) NULL DEFAULT 'N',
                          `grade` VARCHAR(1) NOT NULL DEFAULT 'M',
                          PRIMARY KEY (`user_id`)
);

DROP TABLE BOARD;
CREATE TABLE `BOARD` (
                         `board_id`	BIGINT	NOT NULL AUTO_INCREMENT,
                         `title`	VARCHAR(200)	NOT NULL,
                         `nickname`	VARCHAR(50)	NOT NULL,
                         `content`	VARCHAR(2000)	NOT NULL,
                         `img`	VARCHAR(500)	NULL,
                         `like`	BIGINT	NULL	DEFAULT 0,
                         `visit`	BIGINT	NULL	DEFAULT 0,
                         `cre_date`	TIMESTAMP	NOT NULL,
                         `del_date`	TIMESTAMP	NULL,
                         `state`	VARCHAR(1)	NULL	DEFAULT 'N',
                         `user_id`	BIGINT	NOT NULL,
                         PRIMARY KEY (`board_id`),
                         FOREIGN KEY (`user_id`) REFERENCES `USER` (`user_id`)
);


DROP TABLE BOARD_LIKE;
CREATE TABLE `BOARD_LIKE` (
                              `like_id`	BIGINT	NOT NULL AUTO_INCREMENT,
                              `board_id` BIGINT NOT NULL,
                              `user_id` BIGINT NOT NULL,
                              PRIMARY KEY (`like_id`),
                              FOREIGN KEY (`board_id`) REFERENCES `BOARD` (`board_id`),
                              FOREIGN KEY (`user_id`) REFERENCES `USER` (`user_id`)
);


CREATE TABLE `BOARD_COMMENT` (
                                 `comment_id`	BIGINT	NOT NULL AUTO_INCREMENT,
                                 `content`	VARCHAR(2000)	NULL,
                                 `writer`	VARCHAR(50)	NOT NULL,
                                 `cre_date`	TIMESTAMP	NULL,
                                 `del_date`	TIMESTAMP	NULL,
                                 `state`	VARCHAR(1)	NULL	DEFAULT 'N',
                                 `parent_id`	BIGINT	NULL,
                                 `board_id`	BIGINT	NOT NULL,
                                 `user_id`	BIGINT	NOT NULL,
                                 PRIMARY KEY (`comment_id`),
                                 FOREIGN KEY (`board_id`) REFERENCES `BOARD` (`board_id`),
                                 FOREIGN KEY (`user_id`) REFERENCES `USER` (`user_id`)
);

CREATE TABLE `TB_BOARD_COMMENT` (
                                    `comment_id` BIGINT NOT NULL AUTO_INCREMENT,
                                    `content` VARCHAR(1000) NOT NULL,
                                    `writer` VARCHAR(50) NOT NULL,
                                    `cre_date` TIMESTAMP NOT NULL,
                                    `del_date` TIMESTAMP,
                                    `state`	VARCHAR(1)	NULL	DEFAULT 'N',
                                    `parent_id` BIGINT,
                                    `board_id` BIGINT,
                                    `user_id` BIGINT,
                                    PRIMARY KEY (`comment_id`),
                                    FOREIGN KEY (`parent_id`) REFERENCES `TB_BOARD_COMMENT` (`comment_id`),
                                    FOREIGN KEY (`board_id`) REFERENCES `BOARD` (`board_id`),
                                    FOREIGN KEY (`user_id`) REFERENCES `USER` (`user_id`)
);


CREATE TABLE `SIGHTS` (
                          `sights_id`	BIGINT	NOT NULL AUTO_INCREMENT,
                          `name`	VARCHAR(50)	NOT NULL,
                          `info`	VARCHAR(2000)	NOT NULL,
                          `addr`	VARCHAR(100)	NOT NULL,
                          `mapx`	VARCHAR(1000)	NOT NULL,
                          `mapy`	VARCHAR(1000)	NOT NULL,
                          `img_1`	VARCHAR(500)	NULL,
                          `img_2`	VARCHAR(500)	NULL,
                          `img_3`	VARCHAR(500)	NULL,
                          `city`	VARCHAR(50)	NOT NULL,
                          `like`	BIGINT	NULL	DEFAULT 0,
                          `rate`	INT	NULL	DEFAULT 0,
                          `isSights`	VARCHAR(10)	NOT NULL	DEFAULT 0	COMMENT '1=관광지,2=맛집',
                          `user_id`	BIGINT	NOT NULL,
                          PRIMARY KEY (`sights_id`),
                          FOREIGN KEY (`user_id`) REFERENCES `USER` (`user_id`)
);

CREATE TABLE `SIGHTS_LIKE` (
                               `like_id`	BIGINT	NOT NULL AUTO_INCREMENT,
                               `sights_id`	BIGINT	NOT NULL,
                               `user_id`	BIGINT	NOT NULL,
                               PRIMARY KEY (`like_id`),
                               FOREIGN KEY (`sights_id`) REFERENCES `SIGHTS` (`sights_id`),
                               FOREIGN KEY (`user_id`) REFERENCES `USER` (`user_id`)
);

CREATE TABLE `SIGHTS_REVIEW` (
                                 `review_id`	BIGINT	NOT NULL AUTO_INCREMENT,
                                 `nickname`	VARCHAR(50)	NOT NULL,
                                 `content`	VARCHAR(2000)	NOT NULL,
                                 `creDate`	TIMESTAMP	NOT NULL,
                                 `delDate`	TIMESTAMP	NULL,
                                 `rate`	INT	NULL,
                                 `img`	VARCHAR(500)	NULL,
                                 `state`	VARCHAR(1)	NOT NULL	DEFAULT 'N',
                                 `sights_id`	BIGINT	NOT NULL,
                                 `user_id`	BIGINT	NOT NULL,
                                 PRIMARY KEY (`review_id`),
                                 FOREIGN KEY (`sights_id`) REFERENCES `SIGHTS` (`sights_id`),
                                 FOREIGN KEY (`user_id`) REFERENCES `USER` (`user_id`)
);
CREATE TABLE `user` (
                                `username` VARCHAR(10),
                                `password`
);
